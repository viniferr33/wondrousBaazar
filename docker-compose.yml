version: '3'

services:
  database:
    image: postgres
    environment:
        POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
        POSTGRES_DB: "${POSTGRES_DATABASE}"
        POSTGRES_USER: "${POSTGRES_USER}"
    volumes:
        - db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    image: ${IMAGE_NAME}
    environment:
      DATABASE_HOST: database
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DATABASE}"
      POSTGRES_USER: "${POSTGRES_USER}"
    depends_on:
      - database
    ports:
      - "${PORT}:${PORT}"

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_EMAIL}"
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_PASSWORD}"
    ports:
      - "3001:80"
    depends_on:
      - database
    volumes:
      - pgadmin-volume:/var/lib/pgadmin

  migrate:
    image: migrate/migrate
    profiles: ["tools"]
    volumes:
      - ./db/migrations:/migrations
    entrypoint:
      [
      "migrate",
      "-path",
      "/migrations",
      "-database",
      "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DATABASE}?sslmode=disable"
      ]
    command: ["up"]
    depends_on:
      database:
        condition: service_healthy
    restart: on-failure

volumes:
  db-volume:
  pgadmin-volume: